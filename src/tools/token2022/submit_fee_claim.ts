//Enables tokens to harvest token fees generated by the Transfer Fee extension from recipients of the mint .

import {
  getAssociatedTokenAddressSync,
  TOKEN_2022_PROGRAM_ID,
  createWithdrawWithheldTokensFromMintInstruction,
} from "@solana/spl-token";
import { PublicKey } from "@solana/web3.js";
import { SolanaAgentKit } from "../../agent";
import { sendTx } from "../../utils/send_tx";
import { TransactionInstruction } from "@solana/web3.js";

/**
 * Submit fee claim transaction
 */
export async function submitFeeClaim(
  agent: SolanaAgentKit,
  mint: PublicKey,
  payer?: PublicKey,
): Promise<string> {
  try {
    const instructions: TransactionInstruction[] = [];

    const dstAcc = getAssociatedTokenAddressSync(
      mint,
      payer ?? agent.wallet_address,
      true,
      TOKEN_2022_PROGRAM_ID,
    );

    //build claim transaction
    instructions.push(
      createWithdrawWithheldTokensFromMintInstruction(
        mint,
        dstAcc,
        payer ?? agent.wallet_address,
        [],
        TOKEN_2022_PROGRAM_ID,
      ),
    );

    const txId = await sendTx(agent, instructions);

    return txId;
  } catch (error: any) {
    throw new Error(`Fee claim failed: ${error.message}`);
  }
}
